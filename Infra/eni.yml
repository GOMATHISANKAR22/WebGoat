AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with public and private subnets'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.100.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: 172.100.11.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: 172.100.12.0/24

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ['ec2.amazonaws.com']
            Action: 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: SSMManagedInstancePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:UpdateInstanceInformation'
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                Resource: '*'
        - PolicyName: EC2SSMSendCommandPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'ssm:SendCommand'
                Resource: '*'  
        - PolicyName: AdministratorAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - !Ref InstanceRole

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-059310caab7e9f4ef
      InstanceType: t4g.small
      KeyName: MarketPlace
      IamInstanceProfile: !Ref InstanceProfile
      NetworkInterfaces:
        - GroupSet:
            - Fn::GetAtt:
                - InstanceSecurityGroup
                - GroupId
          SubnetId: !Ref PublicSubnet
          SecondaryPrivateIpAddressCount: '3'
          DeviceIndex: '0'
        - GroupSet:
            - Fn::GetAtt:
                - InstanceSecurityGroup
                - GroupId
          DeviceIndex: '1'
          SubnetId: !Ref PublicSubnet
          SecondaryPrivateIpAddressCount: '3'
        - GroupSet:
            - Fn::GetAtt:
                - InstanceSecurityGroup
                - GroupId
          DeviceIndex: '2'
          SubnetId: !Ref PublicSubnet
          SecondaryPrivateIpAddressCount: '3'
      UserData: 
        Fn::Base64: |
         #!/bin/bash
         sudo su
         yum update -y
         sudo amazon-linux-extras install nginx1 -y
         sudo systemctl start nginx
         sudo yum install docker -y
         sudo systemctl start docker
         sudo docker pull wordpress:latest
         sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
         sudo systemctl enable amazon-ssm-agent
         sudo systemctl start amazon-ssm-agent

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn:
         - EC2Instance
    Properties:
      Domain: vpc
      
  EIPAddressAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
         - EC2Instance
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      NetworkInterfaceId: !GetAtt EC2Instance.NetworkInterfaces[0]

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  
  PublicSubnet:
    Description: PublicSubnet of the newly created EC2 instance
    Value: !Ref PublicSubnet

  PublicSubnet1:
    Description: PublicSubnet1 of the newly created EC2 instance
    Value: !Ref PublicSubnet1

  VPC:
    Description: VPC of the newly created EC2 instance
    Value: !Ref VPC

  